---

- name: Include and check OS variables for AMI selection
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - debug: var=ec2_target_os verbosity=1
    - fail:
        msg: "Invalid 'ec2_target_os', check environment variable 'EC2_TARGET_OS'. Must be one of ['Ubuntu', 'CentOS']."
      when: ec2_target_os not in ["Ubuntu", "CentOS"]
    - include_vars: "{{ item }}"
      with_first_found:
        - "os_vars/ami/{{ ec2_target_os }}-{{ ec2_target_os_version }}.yml"
        - "os_vars/ami/{{ ec2_target_os }}.yml"
    - debug: var=dcos_ami_id verbosity=1

- name: Create EC2 instances
  hosts: localhost
  connection: local
  gather_facts: false
  # Definition of EC2 instances inspired by https://github.com/chrismeyersfsu/playbook-ec2_properties.
  vars:
    ec2_security_group: dcos-cluster
    ec2_security_group_name: Security Group for the DC/OS cluster
    vpc_name: dcos-cluster-vpc
    vpc_resource_tags: { Name: dcos-cluster-vpc, "Environment":"Development" }
    elb_name: dcos-cluster-elb
    ec2_instances:
      - name: "dcos_master"
        exact_count: 3
        count_tag: "dcos_master"
        instance_type: "{{ lookup('env', 'EC2_INSTANCE_SIZE_MASTER') | default('m4.large') }}"
        ami_id: "{{ dcos_ami_id }}"
        tags: {Name: dcos-master, private_host: '', python: '', dcos_master: ''}

      - name: "dcos_slave"
        exact_count: 5
        count_tag: "dcos_slave"
        instance_type: "{{ lookup('env', 'EC2_INSTANCE_SIZE_SLAVE') | default('m4.large') }}"
        ami_id: "{{ dcos_ami_id }}"
        tags: {Name: dcos-slave, private_host: '', python: '', dcos_slave: ''}

      - name: "dcos_slave_public"
        exact_count: 1
        count_tag: "dcos_slave_public1"
        instance_type: "{{ lookup('env', 'EC2_INSTANCE_SIZE_SLAVE_PUBLIC') | default('m4.large') }}"
        ami_id: "{{ dcos_ami_id }}"
        assign_public_ip: True
        tags: {Name: dcos-slave-public, private_host: '', python: '', dcos_slave_public: '', subnet: 'subnet-public', dcos_slave_public1: ''}

      - name: "dcos_slave_public2"
        exact_count: 1
        count_tag: "dcos_slave_public2"
        instance_type: "{{ lookup('env', 'EC2_INSTANCE_SIZE_SLAVE_PUBLIC') | default('m4.large') }}"
        ami_id: "{{ dcos_ami_id }}"
        assign_public_ip: True
        tags: {Name: dcos-slave-public2, private_host: '', python: '', dcos_slave_public: '', subnet: 'subnet-public2', dcos_slave_public2: ''}

      - name: "dcos-bootstrap"
        exact_count: 1
        count_tag: "dcos_bootstrap"
        instance_type: "{{ lookup('env', 'EC2_INSTANCE_SIZE_BOOTSTRAP') | default('m4.large') }}"
        ami_id: "{{ dcos_ami_id }}"
        assign_public_ip: True
        tags: {Name: dcos-bootstrap, private_host: '', python: '', dcos_bootstrap: '', subnet: 'subnet-public'}

      - name: "dcos-ssh-jumphost"
        exact_count: 1
        count_tag: "ssh_jumphost"
        ami_id: "{{ dcos_ami_id }}"
        assign_public_ip: True
        tags: {Name: dcos-ssh-jumphost, private_host: '', python: '', ssh_jumphost: '', dcos-controller: '', subnet: 'subnet-public'}
  roles:
    - aws

  tasks:
    - debug: msg="*** Playbook done! ***"

