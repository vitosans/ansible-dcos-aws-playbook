---
# EC2 dynamic invetory create different permutations of host collections based on instance properties such as tags.
# See http://codeheaven.io/15-things-you-should-know-about-ansible/ item 12 for more info.

- name: Wait for jumphost SSH
  hosts: tag_ssh_jumphost
  gather_facts: false
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  tasks:
  - local_action:
      wait_for
        host="{{ hostvars[inventory_hostname].ec2_ip_address }}"
        port=22
        delay=10
        timeout=360
        state=started

- name: 'Install python on Jumphost'
  hosts: tag_ssh_jumphost
  become: True
  become_method: sudo
  gather_facts: False
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  tasks:
    - name: 'Upgrade all packages dist-upgrade'
      raw: sudo apt-get -y dist-upgrade
    - name: 'Apt-get update'
      raw: sudo apt-get update
    - name: 'Apt-get upgrade'
      raw: sudo apt-get -y upgrade
    - name: 'Install python'
      raw: sudo apt-get -y install python

- name: Wait for nodes SSH from jumphost
  hosts: tag_ssh_jumphost
  gather_facts: false
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  tasks:
  - wait_for:
      host="{{ hostvars[item].ec2_private_ip_address }}"
      port=22
      delay=10
      timeout=360
      state=started
    with_items: "{{ groups.tag_private_host }}"

- name: 'Install python on hosts with tag_python'
  hosts: tag_python
  become: True
  become_method: sudo
  gather_facts: False
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  tasks:
    - name: 'Upgrade all packages dist-upgrade'
      raw: sudo apt-get -y dist-upgrade
    - name: 'Apt-get update'
      raw: sudo apt-get update
    - name: 'Apt-get upgrade'
      raw: sudo apt-get -y upgrade
    - name: 'Install python'
      raw: sudo apt-get -y install python

# Needs to be a separate playbook task since the Docker service will be restartebd thus loosing running containers..
- name: Install Pip & Docker on tagged hosts
  hosts: tag_dcos_bootstrap:tag_dcos_master:tag_dcos_slave:tag_dcos_slave_public
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  roles:
    - pip
    - docker

- name: Install DCOS bootstrap on tagged host
  hosts: tag_dcos_bootstrap
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  roles:
    - dcos-bootstrap

- name: Install DCOS master host(s)
  hosts: tag_dcos_master
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  roles:
    - dcos

- name: Install DCOS slave host(s)
  hosts: tag_dcos_slave
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  vars:
    dcos_node_type: slave
  roles:
    - dcos

- name: Install DCOS public slave host(s)
  hosts: tag_dcos_slave_public
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  vars:
    dcos_node_type: slave_public
  roles:
    - dcos

- name: Install DCOS cli on DCOS controller hosts
  hosts: tag_dcos_controller[0]
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - "os_vars/ssh/Ubuntu.yml"
  tags:
    - dcos-components
    - dcos-demos
  roles:
    - dcos-controller

